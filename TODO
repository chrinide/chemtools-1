
What about using ASE Atom, Atoms classes instead of molecule?

# TODO

    1. integrate multiprocessing module in order to able able to run multiple jobs at once
    1.1 apply multiprocessing for calculating core energy
    2. explain the input dictionaries in the documentation

## gamessus

    * add a parser for the CI coefficients and determinant/CSF compositions
    * change the interfaces of the parsing functions to accept strings and not
      filenames and add a driver to call all the parsing routines
    * add scripts for frequently used CLI functionality such as making NO input
    * add parser for the symmetry labels, lz values orbitals, orbital energies  and orbital info in the LogParser
    * add a method to merge orbitals for 2 atoms/molecules, similar to molpro
    * make one `data` directory with gamess-us jobs that will by used in test
      and ipython notebooks (tutorials)

## seqfile

    * add support for reading file produced in parallel runs

## basisset
    * add formatters for different file formats: tex, html, xml
    * write a function to transform the orbital expansion coefficient from
      cartesian to pure spherial gaussians

## pescan

    * rewrite the database model to store the information from the molecule
      object and not system specific atom, dimer, etc.

## tests

    * write test and setup.py for automatic testing with py.tet and tox

DONE
====
## basisset
    * change initialization of the BasisSet to allow reading pickle and ascii
      and saving those formats, allow initializing the BasisSet through
      even-tempered, well-tempered, legendre parameters,
